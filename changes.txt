Changelog Projects:

Notes:
- Learn how to create a good flow chart of programs, how to efficiently divide tasks and set priorities.
- Try to think ahead about how I want the program to function.
- Maybe build help entries?
- Implement username input in main menu, editable?

Successfully implemented in main menu application:
- Calculator
- RandomSelector
- NumberGuesser

Work in progress:
- Calculator
	-Implement Pi calculator.
		- what is position 'x' after comma
		- calculate till position 'x' (print character after character?)
		- wiki pi
		- ascii pi
	- Only accept ',' instead of guessing which to use.
	- Nothing behind the ','? Then cast (project?) the double as integer.

- Student enroller
	- Thinking about scrapping this project, what I originally wanted to play around with I already implemented in other projects.
	- So no use case for it right now..

- Number guesser
	- 
		
- Random selector + coin tosser (WIP)
	- Implement saving and loading from file in random selector?
	- Rewrite stats tracker in coin tosser, user can opt to print out the matches and results?

- Age calculator
	- User inputs date of birth.
		- Output the amount of weeks, days, hours, minutes and seconds the person has been alive to this moment.
	- Optional, user inputs date of death.
	 
- Sports planner, inputs goals and time. Link with database.

V0.1:
- Number Guesser, implemented 'memory' for the program if it has to guess. This way it doesn't guess the same number twice.
	- Seems to not work, wrongly guessed generatedNumber gets added to arraylist correctly but logic to check if generatedNumber was guessed before doesn't work.
	- Rewrote logic loop, still doesn't work but better readable.
	- Rewrote the logic loop again, now it works except for the check if the amount of guesses equal the total range.
		- Somehow it stops guessing at one less than the range, adding +1 to the range in the logic check doesn't work. Neither does initialising guessCount as -1.
		- I think it's because if it generates a number that was guessed before, the guessCount counter goes up by one. 
		  If it then generates another number thats in the guesses array, the guessCount counter goes up again.
			- Removed the guessCount entirely, now stops correctly if the guesses array length equals the range.
- Number Guesser, something goes wrong if the user answers no on the question if the range is correct, program gets stuck on blank line (doesn't crash).
	- Fixed, turned out I didn't close a loop correctly. 
- Number Guesser, something goes wrong if the user answers no on the replay question near the end of the program.
	- Fixed, I forgot to put the main program in another loop but I did put the while condition at the end. Oops..
- Number Guesser, added a cheat mode for the program which only enables if the user cheated first :D On recommendation of Ben.
	- Added resets for the 'tries' counter to the beginning of guessing loops.
- Started working on AgeCalculator, implemented a menu loop.
	- Wrote setBegin, setEnd and timeCalculation methods.
	- Wrote a DateTimeFormatter custom format, to be used in conjunction with users input.
	- Under option 1, wrote loops for inputting birthdate and birthtime.
		- Rewrote them and implemented them as getBirthdate and getBirthtime methods in the beginning of the program.
		- Take user input and check that against a custom format.
			- If true, continue with input.
			- If false, repeat until condition is true.
- Made changes to method stringput in Random Selector, now outputs a stringbuilder which can be modified.

V0.009:
- Rewrote input for random selector, now continually takes input until user inputs "Continue".
- Rewrote input for coin tosser, now accepts tails & t or heads & h instead of always having to write it fully.
- Rewrote coin tosser logic, now makes use of java.util.concurrent.ThreadLocalRandom to create a random boolean. If true then it's heads, otherwise it's tails.
- Implemented an replay option to the coin tosser and game stats tracker, displayed at the end.
- Implemented the selector logic within the random selector with the option to "reroll".
- Started working on number guesser.
	- Implemented loops asking for first and last integer of the range, breaks if first < last.
	- Wrote 2 methods to set the first and last integers of the range.
	- Wrote methods for starttime and endtime.
	- Wrote a timeElapsed method, it computes the difference between the two time stamps and outputs it dynamically.
	- Loop in place to ask if user wants to guess or if the program gets to guess.
	- End of user guessing loop, feedback on stats.
	- End of program guessing loop, feedback on stats. 
	- Added replay question at the end, resets the first and last variables.

V0.008:
- Fixed bug in Main Menu, after exiting program user would still get the message "Wrong choice, try again". Turned out I forgot a break; in the exit case.
- Edited Calculator.prompt() to insert an empty line before "Press enter to continue..".
- Made some small grammatical adjustments in Random Selector.
- Inserted comments in Random Selector class, so I can understand what the functions do in the future.
- Started working on Random Selector, starts loop which asks for user input until the user is satisfied.
  Then returns all entries in the list and asks if the user wants to add/remove an entry or continue.
- Need to rewrite coin toss option; create switch loop which also accepts abbreviated forms of heads and tails, implement want to play again? prompt and show total wins vs losses (+ winrate%?) at the end. 

V0.007:
- Sidney noticed that results of math functions sometimes looked odd, liam suggested to cast the results in float which seemed to help.
- Created the Random Selector class, implemented a menu and coin tosser.
- Inserted Random Selector into Main Menu, now selectable.

V0.006:
- Implemented menu in calculator, figured it'd be better than asking the user to always create a custom formula.
- Moved previous main() into switch case 7, still incomplete though. See notes in beginning of Calculator.java.
- Moved entire menu in do while loop, only exits when boolean exit flag equals true.
- Added "press enter to continue.." prompt after every calculation. This way the user gets to read the output of the formula before the menu prints again.
- Need to refactor menu in Main Menu class, implementation in calculator looks better.

V0.005:
- Created multiple new datapoints: variable1, variable2 & result. These will be used in all functions.
- Refactored main, int variables is now called varAmount.
- Refactored main to accept double datatype as input instead of integer, this way user can input numbers like 3.33 instead of only allowing whole numbers. Only refactored for variables input, not for amount of variables as it isn't needed.
- Implemented and tested all manipulating functions.
- Rethinking how the program should work, see correctbook.

V0.004:
- Got an exception in the calculator if I try to input 1 or 0 for the amount of variables, java.util.NoSuchElementException specifically.
- Seems to be related to closing the scanner, commented out those lines and it worked again.
- Apparently closing the scanner is not something what you want to do, unless you don't want to be able to input anything again. 
- Created several functions for manipulation of variables in Calculator.

V0.003:
- Worked out why exception handling didn't work in the calculator, turns out I had to initialize the variable before the loop.

V0.002:
- Successfully implemented exception handling in the main menu.
- Started working on Calculator.
	- See correctbook for desired workings.
- Tried to implement exception handling for variable input, keeps looping after catching exception.

V0.001:
- Created menu.java to access and interact with different projects.
- Added user input.
- Attempted to create a try and catch exception.
